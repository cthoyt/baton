services:
    app.controller.main:
        class: AppBundle\Controller\MainController
        arguments:
            $projectRepository: "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Project')"
            $packageRepository: "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Package')"
            $formFactory: "@form.factory"

    app.controller.importRepositories:
        class: AppBundle\Controller\ImportRepositoriesController
        arguments:
            $formFactory: "@form.factory"
            $importProjectTask: "@app.task.import_project"

    app.controller.webhook:
        class: AppBundle\Controller\WebhookController
        arguments:
            $importProjectTask: "@app.task.import_project"

    app.project.repository:
        class: AppBundle\Entity\Repository\ProjectRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments: ['AppBundle\Entity\Project']

    app.package.repository:
        class: AppBundle\Entity\Repository\PackageRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments: ['AppBundle\Entity\Package']

    app.fixtures:
        class: AppBundle\DataFixtures\AppFixtures
        tags: ['doctrine.fixture.orm']

    app.task.import_project:
        class: AppBundle\Task\ImportProjectTask
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"
            $vcsDriverFactory: "@app.factory.vcs_driver_factory"

    app.factory.vcs_driver_factory:
        class: AppBundle\Factory\VcsDriverFactory
        arguments:
            $githubOAuthToken: "%app.github.token%"
            $kilnOAuthToken: "%app.kiln.token%"

    app.command.import_project:
        class: AppBundle\Command\ImportProjectCommand
        arguments:
            $importProjectTask: "@app.task.import_project"
        tags:
            - { name: "console.command" }

    app.form.type.datalist_type:
        class: AppBundle\Form\Type\DatalistType
        tags:
            -  { name: form.type, alias: datalist }
